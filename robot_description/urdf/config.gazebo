<?xml version="1.0"?>
<robot>

<!--************* support_wheel_link_L ***************-->

    <gazebo reference="support_wheel_link_L">
        <!-- friction force -->
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <!-- material-->
        <material>
            Gazebo/White
        </material>
    </gazebo>

<!--************* support_wheel_link_R ***************-->

    <gazebo reference="support_wheel_link_R">
        <!-- friction force -->
        <mu1>0.6</mu1>
        <mu2>0.6</mu2>
        <!-- material-->
        <material>
            Gazebo/White
        </material>
    </gazebo>

<!--************* base_link ***************-->

    <gazebo reference="base_link">
        <!-- friction force -->
        <mu1>0.6</mu1>
        <mu2>0.6</mu2>
        <!-- material-->
        <material>
            Gazebo/Indigo 
        </material>
    </gazebo>


    <gazebo reference="left_wheel">
        <!-- friction force -->
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <!-- material-->
        <material>
            Gazebo/Turquoise 
        </material>
    </gazebo>

    <gazebo reference="right_wheel">
        <!-- friction force -->
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <!-- material-->
        <material>
            Gazebo/Turquoise 
        </material>
    </gazebo>

<!--************* camera ******************-->

    <gazebo reference="camera_link">
        <sensor type="camera" name="camera1">
        <material>Gazebo/Green</material>
        <update_rate>20.0</update_rate>
        <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
            </image>
            <clip>
            <near>0.02</near>
            <far>300</far>
            </clip>
            <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
            </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>dew_ros_robot/camera1</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
        </sensor>
    </gazebo>

<!-- *********** Differential Drive plugin ************* -->

    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        
        <!-- Plugin update rate in Hz -->
        <updateRate>10</updateRate>
    
        <!-- Name of left joint, defaults to `left_joint` -->
        <leftJoint>left_wheel_joint</leftJoint>
    
        <!-- Name of right joint, defaults to `right_joint` -->
        <rightJoint>right_wheel_joint</rightJoint>
    
        <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
        <wheelSeparation>0.32</wheelSeparation>
    
        <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
        <wheelDiameter>0.16</wheelDiameter>
    
        <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
        <wheelAcceleration>1.0</wheelAcceleration>
    
        <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
        <wheelTorque>30</wheelTorque>
    
        <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
        <commandTopic>cmd_vel</commandTopic>
    
        <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
        <odometryTopic>odom</odometryTopic>
    
        <!-- Odometry frame, defaults to `odom` -->
        <odometryFrame>odom</odometryFrame>
    
        <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
        <robotBaseFrame>base_footprint</robotBaseFrame>
    
        <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
        <odometrySource>1</odometrySource>
    
        <!-- Set to true to publish transforms for the wheel links, defaults to false -->
        <publishWheelTF>true</publishWheelTF>
    
        <!-- Set to true to publish transforms for the odometry, defaults to true -->
        <publishOdom>true</publishOdom>
    
        <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
        <publishWheelJointState>true</publishWheelJointState>
    
        <!-- Set to true to swap right and left wheels, defaults to true -->
        <legacyMode>false</legacyMode>
        </plugin>

        <!-- rostopic pub -1 /cmd_vel geometry_msgs/Twist "linear:
        x: 0.3
        y: 0.0
        z: 0.0
        angular:
        x: 0.0
        y: 0.0
        z: 0.2" -->

    </gazebo>


    <!--***************** hokuyo *****************-->
    <gazebo reference="hokuyo_link">
        <sensor type="ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                    <samples>720</samples>
                    <resolution>1</resolution>
                    <min_angle>-1.570796</min_angle>
                    <max_angle>1.570796</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>30.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise parameters based on published spec for Hokuyo laser
                        achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                        stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                        reading. -->
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>/dew_ros_robot/laser/scan</topicName>
                <frameName>hokuyo_link</frameName>
            </plugin>
        </sensor>
    </gazebo>






</robot>